name: Build Syncthing (Nightly)

on:
  schedule:
    # Run nightly build at 05:00 UTC
    - cron: '00 05 * * *'

permissions:
  contents: write
  issues: write
  packages: write
  pull-requests: write

jobs:
  build-syncthing:
    uses: ./.github/workflows/build-syncthing.yaml
    if: contains(fromJSON('["syncthing", "calmh", "rasa"]'), repository_owner)
    secrets: inherit
      # APPSTORECONNECT_API_KEY: ${{ secrets.APPSTORECONNECT_API_KEY }}
      # APPSTORECONNECT_API_KEY_ID: ${{ secrets.APPSTORECONNECT_API_KEY_ID }}
      # APPSTORECONNECT_API_KEY_ISSUER: ${{ secrets.APPSTORECONNECT_API_KEY_ISSUER }}

      # APT_GPG_KEYRING_BASE64: ${{ secrets.APT_GPG_KEYRING_BASE64 }}

      # AZURE_TRUSTED_SIGNING_ACCOUNT: ${{ secrets.AZURE_TRUSTED_SIGNING_ACCOUNT }}
      # AZURE_TRUSTED_SIGNING_CLIENT_ID: ${{ secrets.AZURE_TRUSTED_SIGNING_CLIENT_ID }}
      # AZURE_TRUSTED_SIGNING_CLIENT_SECRET: ${{ secrets.AZURE_TRUSTED_SIGNING_CLIENT_SECRET }}
      # AZURE_TRUSTED_SIGNING_ENDPOINT: ${{ secrets.AZURE_TRUSTED_SIGNING_ENDPOINT }}
      # AZURE_TRUSTED_SIGNING_PROFILE: ${{ secrets.AZURE_TRUSTED_SIGNING_PROFILE }}
      # AZURE_TRUSTED_SIGNING_TENANT_ID: ${{ secrets.AZURE_TRUSTED_SIGNING_TENANT_ID }}

      # CODESIGN_IDENTITY: ${{ secrets.CODESIGN_IDENTITY }}

      # DEVELOPER_ID_CERTIFICATE_BASE64: ${{ secrets.DEVELOPER_ID_CERTIFICATE_BASE64 }}
      # DEVELOPER_ID_CERTIFICATE_PASSWORD: ${{ secrets.DEVELOPER_ID_CERTIFICATE_PASSWORD }}

      # DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      # DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

      # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # LOKI_PASSWORD: ${{ secrets.LOKI_PASSWORD }}
      # LOKI_URL: ${{ secrets.LOKI_URL }}
      # LOKI_USER: ${{ secrets.LOKI_USER }}

      # NIGHTLY_BASE_URL: ${{ secrets.NIGHTLY_BASE_URL }}

      # S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
      # S3_BUCKET: ${{ secrets.S3_BUCKET }}
      # S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
      # S3_PROVIDER: ${{ secrets.S3_PROVIDER }}
      # S3_REGION: ${{ secrets.S3_REGION }}
      # S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}

      # STSIGTOOL_PRIVATE_KEY: ${{ secrets.STSIGTOOL_PRIVATE_KEY }}
